{"version":3,"sources":["courdoroy.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","className","style","backgroundColor","padding","display","gridTemplateColumns","margin","maxWidth","GRID_SIZE","width","Array","fill","map","_","rowIndex","columnIndex","animation","rotation","transform","src","courdoroy","alt","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJAAe,G,UAAA,IAA0B,uC,OCiD1BA,MA5Cf,WACE,OACE,sBAAKC,UAAU,MAAMC,MAAO,CAAEC,gBAAiB,OAAQC,QAAS,IAAhE,UACE,wBAAQH,UAAU,aAAlB,SACE,gDAEF,sBACAC,MAAO,CAACG,QAAS,OACnBC,oBAAoB,UAAD,OAVL,GAUK,YACnBC,OAAQ,cACRC,SAAUC,KACVC,MAAO,QALL,SAMCC,MAdW,IAcMC,KAAK,IAAIC,KAAI,SAACC,EAAGC,GAAJ,OAAiBJ,MAdpC,IAcqDC,KAAK,IAAIC,KAAI,SAACC,EAAGE,GAC9E,IAAId,EAAQ,CACVe,UAAU,0CAEZf,EAAM,kBAAN,qBAAmE,IAA1Ba,EAAWC,GAApD,QACAd,EAAK,OAAL,qBAA2D,IAA1Ba,EAAWC,GAA5C,QAEA,IAAIE,EAAW,EAef,OAZIH,EAAW,GAAKC,EAAc,IAAM,IACtCE,EAAW,IAIRH,EAAW,IAAM,GAAMC,EAAc,IACxCE,EAAW,IAIbhB,EAAMiB,UAAN,iBAA4BD,EAA5B,QAGE,qBAAwCE,IAAKC,EAAWC,IAAI,YAAYC,OAAQ,IAAKb,MAAO,IAAKR,MAAOA,GAAxG,UAAaa,EAAb,YAAyBC,YAI/B,uEChCSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0488fa00.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/courdoroy.33871c87.jpg\";","import './App.css';\nimport courdoroy from './courdoroy.jpg';\n\nconst GRID_SIZE = 12;\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ backgroundColor: \"blue\", padding: 10 }}>\n      <header className=\"App-header\">\n        <h1>Courdoroy Ed</h1>\n      </header>\n      <main\n      style={{display: \"grid\",\n    gridTemplateColumns: `repeat(${GRID_SIZE}, 100px)`,\n    margin: \"0 auto 2rem\",\n    maxWidth: GRID_SIZE * 100,\n    width: \"100%\"}}>\n      {Array(GRID_SIZE).fill(\"\").map((_, rowIndex) => Array(GRID_SIZE).fill(\"\").map((_, columnIndex) =>{\n          let style = {\n            animation: `hueRotation 3.5s linear 200ms infinite`,\n          }\n          style[`-webkit-filter`] = `hue-rotate(${(rowIndex + columnIndex) * 15}deg)`\n          style[`filter`] = `hue-rotate(${(rowIndex + columnIndex) * 15}deg)`\n\n          let rotation = 0;\n\n          /* odd row, even column */\n          if (rowIndex % 2 && columnIndex % 2 === 0) {\n            rotation = 90\n          }\n\n          /* even row, odd column */\n          if ((rowIndex % 2 === 0) && columnIndex % 2) {\n            rotation = 90\n          }\n\n\n          style.transform = `rotate(${rotation}deg)`\n\n          return (\n            <img key={`${rowIndex}-${columnIndex}`} src={courdoroy} alt=\"Courdoroy\" height={100} width={100} style={style}/>\n          )\n        } ))}\n      </main>\n      <p>Home of the High Five üôè</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}